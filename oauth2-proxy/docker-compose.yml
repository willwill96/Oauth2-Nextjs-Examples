services:
  nextjs_app:
    build: .
    container_name: vanilla_nextjs_app
    environment:
      # - KEYCLOAK_ISSUER=http://host.docker.internal:8080/realms/test-realm
      - HOSTNAME=0.0.0.0
      # - KEYCLOAK_CLIENT_ID=test-client
      # - KEYCLOAK_CLIENT_SECRET=ZnVdxKDCe2lRcJcPoXOZNWqh1UxuUNUV
    ports: 
      - "3001:3001"
    volumes:
      - ./:/app/
    networks:
      - my_network
  oauth2_proxy:
    image: quay.io/oauth2-proxy/oauth2-proxy:v7.7.1
    container_name: oauth2_proxy
    depends_on:
      keycloak_app:
        condition: service_healthy
    ports: 
      - "3000:3000"
    environment:
      - OAUTH2_PROXY_CLIENT_ID=test-client
      - OAUTH2_PROXY_CLIENT_SECRET=ZnVdxKDCe2lRcJcPoXOZNWqh1UxuUNUV
      - OAUTH2_PROXY_OIDC_ISSUER_URL=http://host.docker.internal:8080/realms/test-realm
      - OAUTH2_PROXY_PROVIDER=keycloak-oidc
      - OAUTH2_PROXY_COOKIE_SECRET=randomcookievalu
      - OAUTH2_PROXY_REDIRECT_URL=http://host.docker.internal:3000/oauth2/callback
      - OAUTH2_PROXY_EMAIL_DOMAINS=*
      - OAUTH2_PROXY_COOKIE_SECURE=false
      - OAUTH2_PROXY_OIDC_EXTRA_AUDIENCES=account
      - OAUTH2_PROXY_UPSTREAMS=http://host.docker.internal:3001
      - OAUTH2_PROXY_HTTP_ADDRESS=:3000
      - OAUTH2_PROXY_PASS_ACCESS_TOKEN=true
      - OAUTH2_PROXY_BACKEND_LOGOUT_URL=http://host.docker.internal:8080/realms/test-realm/protocol/openid-connect/logout?id_token_hint={id_token}
      - OAUTH2_PROXY_SKIP_AUTH_ROUTES=^/_next/*,^/$,^/api/is-authed$
    networks:
      - my_network
  keycloak_app:
    image: quay.io/keycloak/keycloak:26.0.7
    container_name: keycloak
    command: start-dev --import-realm
    volumes:
      - ../keycloak/data/import:/opt/keycloak/data/import
    ports:
      - "8080:8080"
      - "9000:9000"
    depends_on:
      - postgres
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_HEALTH_ENABLED: true
      KEYCLOAK_LOGLEVEL: DEBUG
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_HOSTNAME: host.docker.internal
    networks:
      - my_network
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/9000;echo -e \"GET /health/ready HTTP/1.1\r\nhost: localhost\r\nConnection: close\r\n\r\n\" >&3;grep \"HTTP/1.1 200 OK\" <&3"]
      interval: 30s
      retries: 5
      timeout: 10s
      start_period: 20s
    
  postgres:
    image: postgres:14
    environment:
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
      POSTGRES_DB: keycloak
    volumes:
      - keycloak_postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - my_network


volumes:
  keycloak_postgres_data:

networks:
  my_network:
    driver: bridge